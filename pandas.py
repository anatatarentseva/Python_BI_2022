# -*- coding: utf-8 -*-
"""pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d-Bn6_9MT2YvqdNjhcWlrq3UWnIlWrCA
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# функции read_gff и read_bed6 для чтения соответствующих форматов

def read_gff(file):
    col = ['chromosome', 'source', 'type', 'start', 'end', 'score', 'stand', 'phase', 'attributes']
    return pd.read_csv(file, comment='"', header=None, names=col, sep = '\s+').drop(index=0)

def read_bed6(file):
    col = ['chromosome', 'start', 'end', 'name', 'score', 'stand']
    return pd.read_csv(file, comment='"', header=None, names=col, sep = '\s+').drop(index=0)

df_gff = read_gff('rrna_annotation.gff')
df_bed6 = read_bed6('alignment.bed')

df_gff.head()

df_bed6.head()

# сокращение колонки атрибутов

new_df_gff = df_gff.copy()
df_gff['attributes'] = df_gff['attributes'].apply(lambda x: x.split('=')[-1])
df_gff.head()

# BarPlot количество рРНК каждого типа

chromo = [x[1] for x in sorted([[int(x.split('_')[-1]), x] for x in df_gff['chromosome'].unique()])]
barplot = [[], [], []]

for chr in chromo:
    barplot[0].append(len(df_gff[(df_gff['chromosome'] == chr) & (df_gff['attributes']=='16S')]))
    barplot[1].append(len(df_gff[(df_gff['chromosome'] == chr) & (df_gff['attributes']=='23S')]))
    barplot[2].append(len(df_gff[(df_gff['chromosome'] == chr) & (df_gff['attributes']=='5S')]))


barWidth = 0.25
fig = plt.subplots(figsize =(12, 8))

br1 = np.arange(len(barplot[0]))
br2 = [x + barWidth for x in br1]
br3 = [x + barWidth for x in br2]
 
plt.bar(br1, barplot[0], color ='r', width = barWidth, edgecolor ='grey', label ='16S')
plt.bar(br2, barplot[1], color ='g', width = barWidth, edgecolor ='grey', label ='23S')
plt.bar(br3, barplot[2], color ='b', width = barWidth, edgecolor ='grey', label ='5S')
 
plt.xlabel('Sequence', fontweight ='bold', fontsize = 15)
plt.ylabel('Count', fontweight ='bold', fontsize = 15)
plt.xticks([r + barWidth for r in range(len(chromo))], chromo, rotation = 90)
 
plt.legend()
plt.show()

# рРНК полностью вошедшие в сборку 

df = new_df_gff.merge(df_bed6, left_on=['chromosome'], right_on=['chromosome'], how='inner')

df.head()